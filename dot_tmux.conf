# General Configuration
# ─────────────────────────

# Remove default prefix key (Ctrl-b)
unbind C-b

# Enable system clipboard integration
set -g set-clipboard on

# Allow applications to pass through escape sequences to terminal
set -g allow-passthrough on

# Set new prefix key to Ctrl-f
set -g prefix C-f

# Start window numbering at 1 instead of 0 (easier to reach on keyboard)
set -g base-index 1

# Automatically rename windows based on current program
set -g -w automatic-rename on

# Use vi-style key bindings in status line
set -g status-keys vi

# Set scrollback buffer size (number of lines to remember)
set -g history-limit 15000

# Always enable extended keys (function keys, arrow keys with modifiers)
set -g extended-keys always

# Enable italic text support in xterm-compatible terminals
set -as terminal-overrides ',xterm*:sitm=\E[3m'

# Remove escape key delay (important for vim users)
set -sg escape-time 0

# Start pane numbering at 1 instead of 0
set -g -w pane-base-index 1

# Use vi-style key bindings in copy mode
set -g -w mode-keys vi

# Show activity alerts in other windows
set -g -w monitor-activity on

# Enable mouse support (scrolling, pane selection, resizing)
set -g -w mouse on

# Allow Ctrl-f to be sent to applications by pressing prefix twice
bind C-f send-prefix

# Allow Meta+Shift+Ctrl+f to send Ctrl-f to applications
bind-key -n M-S-C-f send-keys C-f

# Session management bindings
bind B new-session
bind b choose-session
bind L switch-client -p

# Vim-style pane navigation (hjkl keys)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Alt+hjkl unbinds
unbind -n M-h
unbind -n M-j
unbind -n M-k
unbind -n M-l

# Resize panes using Alt + arrow keys (no prefix required)
bind -n M-Left  resize-pane -L 4
bind -n M-Right resize-pane -R 4
bind -n M-Up    resize-pane -U 4
bind -n M-Down  resize-pane -D 4

# Switch between windows using Shift + arrow keys (no prefix required)
bind -n S-Left  previous-window
bind -n S-Right next-window

# Swap current pane with marked pane, mark it, then go to last pane
bind-key ä swap-pane \; select-pane -M \; last-pane

# Split window horizontally and vertically, preserving current directory
bind-key v split-window -h -c "#{pane_current_path}"     # Split right (vertical line)
bind-key V split-window -h -b -c "#{pane_current_path}"  # Split left (before current)
bind-key s split-window -v -c "#{pane_current_path}"     # Split down (horizontal line)
bind-key S split-window -v -b -c "#{pane_current_path}"  # Split up (before current)

# Full-height/width splits with specific percentages
bind-key C-v   split-window -h -l 40% -f -c "#{pane_current_path}"    # Full height, 40% width, right
bind-key C-S-v split-window -h -l 30% -f -b -c "#{pane_current_path}" # Full height, 30% width, left
bind-key C-s   split-window -v -l 40% -f -c "#{pane_current_path}"    # Full width, 40% height, down
bind-key C-S-s split-window -v -l 30% -f -b -c "#{pane_current_path}" # Full width, 30% height, up

# Reload tmux configuration file
bind r source-file ~/.tmux.conf

# Copy mode key bindings (vi-style)
bind-key Escape copy-mode            # Enter copy mode (default is [)
bind-key -n M-S-C-v copy-mode

# go back to normal mode
bind-key -T copy-mode-vi -n M-S-C-v send-keys -X cancel

# Vi-style copy mode bindings
bind-key -T copy-mode-vi v send-keys -X begin-selection;
bind-key -T copy-mode-vi V send-keys -X select-line;
bind-key -T copy-mode-vi y send-keys -X copy-selection;


# Plugin Definition
# ─────────────────────────

# Lazygit hotkey
set -g @open-lazygit C-g

# FZF Links hotkey
set -g @fzf-links-key C-h

# Fastcopy text to clipboard
set -g @fastcopy-action 'tmux load-buffer -w -'

# FZF Links configuration
set -g @fzf-links-history-lines "500"
set -g @fzf-links-editor-open-cmd "tmux new-window -n 'nvim' nvim +%line '%file'"
set -g @fzf-links-browser-open-cmd "open '%url'"
set -g @fzf-links-fzf-display-options "-w 80% --maxnum-displayed 30 --multi --track --no-preview"
set -g @fzf-links-python "python"

# Plugin Manager
set -g @plugin 'tmux-plugins/tpm'              # Plugin manager itself
set -g @plugin 'robin-moser/aw-watcher-tmux'   # ActivityWatch integration for time tracking
set -g @plugin 'alberti42/tmux-fzf-links'      # FZF-based link extraction and opening
set -g @plugin 'AngryMorrocoy/tmux-neolazygit' # Lazygit integration
set -g @plugin 'abhinav/tmux-fastcopy'         # Fast copying utilities
set -g @plugin 'laktak/extrakto'               # Extract text patterns from terminal

# Plugin Installation if missing
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# Initialize TPM
run '~/.tmux/plugins/tpm/tpm'

# Color scheme and styling
# ─────────────────────────

accentcolor='#FF9E64'
accentcolortext='#000000'

selectioncolor='#252832'
selectioncolortext="#{accentcolor}"

barcolor='#31323c'

inactivepanecolor='#1C1E28'
activepanecolor='#1A1B23'
bordercolor='colour232'
markedcolor='#99603d'

primarycolor='#111111'
primarycolortext='#777777'
secondarycolor='#222228'
secondarycolortext='#bbbbbb'
bellcolortext='#fcc000'
activitycolortext='#bbbbbb'

# Pane border styling
set -g pane-border-style "fg=$bordercolor,bg=$inactivepanecolor"
set -g pane-active-border-style "fg=$bordercolor,bg=$inactivepanecolor"
set -g pane-marked-border-style "fg=$markedcolor,bg=$inactivepanecolor"

# Popup window border styling
set -g popup-border-style "fg=$markedcolor,bg=$inactivepanecolor"

# Window background colors
set -g window-active-style "bg=$activepanecolor"
set -g window-style "bg=$inactivepanecolor"

# Copy mode and selection styling
set -g -w mode-style bg=$selectioncolor,fg=$selectioncolortext
set -g -w clock-mode-colour $accentcolor

# Status bar styling
set -g status-bg $barcolor
set -g status-fg white

# Disable default bell and activity styling (will be customized elsewhere)
set -g window-status-bell-style ''
set -g window-status-activity-style ''

set -g -w window-status-separator ''


# Additional Customizations
# ─────────────────────────

source ~/.tmux/hide-pane.tmux    # Custom pane hiding functionality
source ~/.tmux/opencode.tmux     # opencode integration
source ~/.tmux/statusbar.tmux    # Load custom status bar configuration
